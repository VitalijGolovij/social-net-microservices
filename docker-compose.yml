services:
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    hostname: kafka
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "TestTopic:1:1,Email:1:1"
    depends_on:
      - zookeeper

  eureka:
    build: /eureka-server/
    container_name: eureka
    ports:
      - '8081:8081'
    restart: on-failure

  profile:
    build: /profile-service/
    container_name: profile
    ports:
      - '8082:8082'
    restart: on-failure
    environment:
      MYSQL_HOST: db_profile
      MYSQL_USER: root
      MYSQL_PASSWORD: 3580
      MYSQL_PORT: 3306
      KAFKA_HOST: kafka
      EUREKA_HOST: eureka
    depends_on:
      eureka:
        condition: service_started
      kafka:
        condition: service_started
      db_profile:
        condition: service_healthy

  db_profile:
    image: mysql:latest
    container_name: db_profile
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    environment:
      MYSQL_DATABASE: 'profile_service'
      MYSQL_ROOT_PASSWORD: '3580'
    volumes:
      - ./db_schemes/profile/:/docker-entrypoint-initdb.d
      - /var/lib/mysql
    ports:
      - '3307:3306'

  security:
    build: /security-service/
    container_name: security
    ports:
      - '8087:8087'
    restart: on-failure
    environment:
      MYSQL_HOST: db_security
      MYSQL_USER: root
      MYSQL_PASSWORD: 3580
      MYSQL_PORT: 3306
      KAFKA_HOST: kafka
      EUREKA_HOST: eureka
    depends_on:
      eureka:
        condition: service_started
      kafka:
        condition: service_started
      db_security:
        condition: service_healthy

  db_security:
    image: mysql:latest
    container_name: db_security
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    environment:
      MYSQL_DATABASE: 'security_service'
      MYSQL_ROOT_PASSWORD: '3580'
    volumes:
      - ./db_schemes/security/:/docker-entrypoint-initdb.d
      - /var/lib/mysql
    ports:
      - '3308:3306'

  message:
    build: /message-service/
    container_name: message
    ports:
      - '8083:8083'
    restart: on-failure
    environment:
      MYSQL_HOST: db_message
      MYSQL_USER: root
      MYSQL_PASSWORD: 3580
      MYSQL_PORT: 3306
      KAFKA_HOST: kafka
      EUREKA_HOST: eureka
    depends_on:
      eureka:
        condition: service_started
      kafka:
        condition: service_started
      db_message:
        condition: service_healthy

  db_message:
    image: mysql:latest
    container_name: db_message
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    environment:
      MYSQL_DATABASE: 'message_service'
      MYSQL_ROOT_PASSWORD: '3580'
    volumes:
      - ./db_schemes/message/:/docker-entrypoint-initdb.d
      - /var/lib/mysql
    ports:
      - '3309:3306'

  file-storage:
    build: /file-storage-service/
    container_name: file-storage
    ports:
      - '8085:8085'
    restart: on-failure
    environment:
      MYSQL_HOST: db_file-storage
      MYSQL_USER: root
      MYSQL_PASSWORD: 3580
      MYSQL_PORT: 3306
      KAFKA_HOST: kafka
      EUREKA_HOST: eureka
    depends_on:
      eureka:
        condition: service_started
      kafka:
        condition: service_started
      db_file-storage:
        condition: service_healthy

  db_file-storage:
    image: mysql:latest
    container_name: db_file-storage
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    environment:
      MYSQL_DATABASE: 'file_storage_service'
      MYSQL_ROOT_PASSWORD: '3580'
    volumes:
      - ./db_schemes/file-storage/:/docker-entrypoint-initdb.d
      - /var/lib/mysql
    ports:
      - '3310:3306'

  mail_sender:
    build: /email-sender-service/
    container_name: mail_sender
    ports:
      - '8084:8084'
    restart: on-failure
    env_file:
      - ./.env
    environment:
      MYSQL_HOST: db_mail-sender
      MYSQL_USER: root
      MYSQL_PASSWORD: 3580
      MYSQL_PORT: 3306
      KAFKA_HOST: kafka
      EUREKA_HOST: eureka
      EMAIL: ${EMAIL}
      PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
    depends_on:
      eureka:
        condition: service_started
      kafka:
        condition: service_started
      db_mail-sender:
        condition: service_healthy

  db_mail-sender:
    image: mysql:latest
    container_name: db_mail-sender
    restart: always
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    environment:
      MYSQL_DATABASE: 'notification_service'
      MYSQL_ROOT_PASSWORD: '3580'
    volumes:
      - ./db_schemes/email-sender/:/docker-entrypoint-initdb.d
      - /var/lib/mysql
    ports:
      - '3311:3306'

  api-gateway:
    build: /api-gateway/
    container_name: api-gateway
    ports:
      - '8086:8086'
    restart: on-failure
    environment:
      EUREKA_HOST: eureka
    depends_on:
      profile:
        condition: service_started
      security:
        condition: service_started
